 void merge(vector<int>& nums , int left , int mid , int right){
        vector<int>temp;
        int i = left ;
        int j = mid+1;
        while(i<=mid && j <=right){
            if(nums[i] <= nums[j]){
                temp.push_back(nums[i]);
                i++;
            }else{
                temp.push_back(nums[j]);
                j++;
            }
        }
        while(i<=mid){
            temp.push_back(nums[i]);
            i++;
        }
        while(j<=right){
            temp.push_back(nums[j]);
            j++;
        }
        for(int k=left , m = 0;k<=right;k++ , m++) nums[k]=temp[m];
    }
    
    void merge_sort(vector<int>&nums , int left , int right){
        if(left == right) return ;
        int mid = (left+right)/2;
        merge_sort(nums , left , mid);
        merge_sort(nums , mid+1 , right);
        merge(nums , left , mid , right);
    }
